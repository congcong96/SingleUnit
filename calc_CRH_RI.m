function [RI, z, p, crhcorr, ncrhcorr] = calc_CRH_RI(sprtmf, sprsmf, spktrain, varargin)
% Based on Escabi et al., 2014 (J. Neurophysiol)
% 
% Determine if the CRH is stable over time
% The RI of the CRH is compared to the null distribution of RIs of nCRHs
% Inputs:
%   sprtmf: tmf of stimulus 
%   sprsmf: smf of stimulus 
%   spktrain: spike train of neurons binned as stim.
%   niter: number of iteration to calculate reliability index, 
%             default = 1000
%   
% Outputs:
%   sig_z: significance of the reliability index of the unit based on z-score
%   sig_p: significance based on p-value
%   RI: reliability index of the unit
%   crhcorr: (RI_iter * 1) distribution of correlation of the neuron
%   ncrhcorr: (RI_iter * 1) null distribution of correlation
% null correlation distribution is generated by circular shift spike train once and sample spikes
% for RI_niter times
%
% Written by Congcong, 05/06/2021.
    

p = inputParser;
addParameter(p,'niter', 1000);
addParameter(p,'nblocks', 10);
addParameter(p,'plot_flag', 0);
parse(p,varargin{:});
niter = p.Results.niter;
nblocks = p.Results.nblocks;
plot_flag = p.Results.plot_flag;

spktrain1 = cell(1, niter);
spktrain2 = cell(1, niter);
idx = find(spktrain > 0);
n = floor(length(idx)/2);
for ii = 1:niter
    
    randidx = idx(randperm(length(idx)));
    spktrain1{ii} = randidx(1:n);
    spktrain2{ii} = randidx(n+1:end);
end

crhcorr = zeros(niter, 1);
tmf_hist = [unique(sprtmf), 64];
smf_hist = [unique(sprsmf), 4];
for ii = 1:niter
    
    crh1 = calc_crh(spktrain1{ii}, sprtmf, sprsmf, tmf_hist, smf_hist);
    crh2 = calc_crh(spktrain2{ii}, sprtmf, sprsmf, tmf_hist, smf_hist);
    
    crhcorr(ii) = corr(crh1, crh2);
end
RI = mean(crhcorr);

% null distribution of circular-shifted spiketrain
nsample = floor(size(sprsmf, 2)/(nblocks + 1));
ncrhcorr = zeros(niter, nblocks);
for jj = 1:nblocks
    sprtmf_shift = circshift(sprtmf, jj*nsample);
    sprsmf_shift = circshift(sprsmf, jj*nsample);
    
    for ii = 1:niter
        
        crh1 = calc_crh(spktrain1{ii}, sprtmf_shift, sprsmf_shift, tmf_hist, smf_hist);
        crh2 = calc_crh(spktrain2{ii}, sprtmf_shift, sprsmf_shift, tmf_hist, smf_hist);
        
        ncrhcorr(ii, jj) = corr(crh1, crh2);
    end
end
p = sum(ncrhcorr(:) >= RI)/(niter*nblocks);
z = (mean(crhcorr) - mean(ncrhcorr(:)))/sqrt((std(crhcorr)^2 + nblocks*std(crhcorr(:))^2)/(1+nblocks));

if plot_flag
    figure
    histogram(crhcorr, 25, 'normalization', 'probability')
    hold on
    histogram(ncrhcorr(:), 25, 'normalization', 'probability')
    legend({'original', 'shifted'})
    xlabel('RI')
    ylabel('proportion')
end

end

function crh = calc_crh(spktimes, sprtmf, sprsmf, tmf_hist, smf_hist)

tmf = sprtmf(spktimes);
smf = sprsmf(spktimes);
temp = histcounts2(smf, tmf, smf_hist, tmf_hist);
crh = temp(:);

end